#!/bin/bash 
############################################################
# BEGIN USER MODIFIABLE ASSIGMENTS
############################################################
# Override default values for various environment variables
# used by 'configure' scripts by setting right hand sides 
# appropriately, and uncommenting assignment(s).
############################################################
# Name of C compiler
# export CC='cc'

# Name of C++ compiler
# export CXX='cc'

# Generic C flags WITH optimization
# export CFLAGS='-O'

# Generic C flags WITHOUT optimization 
# export CFLAGS_NOOPT=''

# C pre-processor flags (specify non-standard include locations etc.)
# export CPPFLAGS='-I/home/user/include'

# Generic C++ flags (optimization etc.)
# export CXXFLAGS='-O'

# Loader flags (specify non-standard library locations etc.)
# export LDFLAGS='-L/home/user/lib'

# Name of Fortran 77 compiler
# export F77='f77'

# Generic Fortran 77 flags WITH optimization
# export F77FLAGS='-O'

# Generic Fortran 77 flags WITHOUT optimization
# export F77FLAGSNOOPT=''

# Fortran 77 load phase flags (specify non-standard library locations etc.)
# export F77LFLAGS='-L/home/user/lib'

# Name of Fortran 90 compiler
# export F90='f90'

# Generic Fortran 90 flags (optimization etc.)
# export F90FLAGS='-O'

# Additional paths to search for libraries (white space separated)
# export LIB_PATHS='/home/user1/lib /home/user2/lib'

# Additional paths to search for include files (white space separated)
# export INCLUDE_PATHS='/home/user1/include /home/user2/include'
############################################################
# END USER MODIFIABLE ASSIGMENTS
############################################################

export DAGH_NO_MPI='on'
export BBH_CHECK_DEFAULTS='on'

. PACKAGES.sh

P=`basename $0`

usage() {
cat<<END
usage: $P installation-prefix

Example: $P /usr/local

Note: See script source for user-modifiable environment variables that may 
need to be tailored to your desired compilation environment.
END
exit 1
}

warn() {
   echo "$P: $1"
}

header() {
cat<<END | tee -a Install.log
+++++++++++++++++++++++++++++++++++++++
LOG: rnpletal/Install 

date=`date`

hostname=`hostname`
uname -a=`uname -a`
USER=$USER

CC=<$CC>
CXX=<$CXX>
CFLAGS=<$CFLAGS>
CFLAGS_NOOPT=<$CFLAGS_NOOPT>
CPPFLAGS=<$CPPFLAGS>
LDFLAGS=<$LDFLAGS>
F77=<$F77>
F77FLAGS=<$F77FLAGS>
F77FLAGSNOOPT=<$F77FLAGSNOOPT>
F77LFLAGS=<$F77LFLAGS>
F90=<$F90>
F90FLAGS=<$F90FLAGS>
LIB_PATHS=<$LIB_PATHS>
INCLUDE_PATHS=<$INCLUDE_PATHS>
+++++++++++++++++++++++++++++++++++++++

END
}

case $# in
1) PREFIX=$1;;
*) usage;;
esac

test -f Install.log && rm Install.log
header
for pack in $PACKAGES; do
   if test -d $pack; then
      case $pack in
      pamr) die "pamr installation not implemented yet" ;;
      mpich) die "pamr installation not implemented yet" ;;
      *)
         echo "+++++++++++++++++++++++++++++++++++++++" | tee -a Install.log
         echo "Configuring and installing in $pack ..." | tee -a Install.log
         echo "+++++++++++++++++++++++++++++++++++++++" | tee -a Install.log
         (cd $pack; ./configure --prefix=$PREFIX; make install) 2>&1 | tee -a Install.log
      ;;
      esac
   else
      warn "Directory $pack not found in this distribution." 
   fi
done
